{"ast":null,"code":"var _jsxFileName = \"C:\\\\TicketScheduler\\\\it-help-desk\\\\frontend\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/UserDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport TicketSubmissionForm from './TicketSubmissionForm';\nimport './UserDashboard.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [submittedTickets, setSubmittedTickets] = useState([]);\n  const [showSubmitForm, setShowSubmitForm] = useState(true); // State to toggle between views\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchSubmittedTickets = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/auth/tickets/user-submitted', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setSubmittedTickets(data);\n        } else {\n          setMessage(data.error);\n        }\n      } catch (error) {\n        setMessage('Failed to fetch submitted tickets. Please try again later.');\n      }\n    };\n    fetchSubmittedTickets();\n  }, []);\n  const submitTicket = async ticketData => {\n    try {\n      const response = await fetch('http://localhost:5000/auth/tickets', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(ticketData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Ticket submitted successfully!');\n        setSubmittedTickets(prevTickets => [...prevTickets, data.ticket]);\n      } else {\n        setMessage(data.error);\n      }\n    } catch (error) {\n      setMessage('An error occurred while submitting the ticket.');\n    }\n  };\n  const toggleView = () => {\n    setShowSubmitForm(!showSubmitForm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleView,\n      className: \"toggle-view-btn\",\n      children: showSubmitForm ? 'View Submitted Tickets' : 'Submit New Ticket'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), showSubmitForm ? /*#__PURE__*/_jsxDEV(TicketSubmissionForm, {\n      onSubmit: submitTicket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ticket-list\",\n      children: submittedTickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ticket-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ticket.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ticket.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/ticket/${ticket.id}`),\n          children: \"Open Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, ticket.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"m/yWYMvEjlKvFeW45eFI1LGCttA=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","TicketSubmissionForm","useNavigate","jsxDEV","_jsxDEV","UserDashboard","_s","message","setMessage","submittedTickets","setSubmittedTickets","showSubmitForm","setShowSubmitForm","navigate","fetchSubmittedTickets","response","fetch","method","headers","localStorage","getItem","data","json","ok","error","submitTicket","ticketData","body","JSON","stringify","prevTickets","ticket","toggleView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","map","title","description","id","_c","$RefreshReg$"],"sources":["C:/TicketScheduler/it-help-desk/frontend/src/components/UserDashboard.js"],"sourcesContent":["// src/components/UserDashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport TicketSubmissionForm from './TicketSubmissionForm';\r\nimport './UserDashboard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserDashboard = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [submittedTickets, setSubmittedTickets] = useState([]);\r\n  const [showSubmitForm, setShowSubmitForm] = useState(true); // State to toggle between views\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchSubmittedTickets = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/auth/tickets/user-submitted', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setSubmittedTickets(data);\r\n        } else {\r\n          setMessage(data.error);\r\n        }\r\n      } catch (error) {\r\n        setMessage('Failed to fetch submitted tickets. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchSubmittedTickets();\r\n  }, []);\r\n\r\n  const submitTicket = async (ticketData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/auth/tickets', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify(ticketData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage('Ticket submitted successfully!');\r\n        setSubmittedTickets((prevTickets) => [...prevTickets, data.ticket]);\r\n      } else {\r\n        setMessage(data.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while submitting the ticket.');\r\n    }\r\n  };\r\n\r\n  const toggleView = () => {\r\n    setShowSubmitForm(!showSubmitForm);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-dashboard\">\r\n      <h1>User Dashboard</h1>\r\n      <button onClick={toggleView} className=\"toggle-view-btn\">\r\n        {showSubmitForm ? 'View Submitted Tickets' : 'Submit New Ticket'}\r\n      </button>\r\n      {showSubmitForm ? (\r\n        <TicketSubmissionForm onSubmit={submitTicket} />\r\n      ) : (\r\n        <ul className=\"ticket-list\">\r\n          {submittedTickets.map((ticket) => (\r\n            <li key={ticket.id} className=\"ticket-item\">\r\n              <h3>{ticket.title}</h3>\r\n              <p>{ticket.description}</p>\r\n              <button onClick={() => navigate(`/ticket/${ticket.id}`)}>Open Chat</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {message && <p className=\"status-message\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}