{"ast":null,"code":"var _jsxFileName = \"C:\\\\TicketScheduler\\\\it-help-desk\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/AdminDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [pendingAccounts, setPendingAccounts] = useState([]);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPendingAccounts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/auth/admin/pending-accounts', {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setPendingAccounts(data);\n        } else {\n          const errorData = await response.json();\n          setMessage(errorData.error || 'An error occurred. Please try again.');\n        }\n      } catch (error) {\n        setMessage('An error occurred. Please try again.');\n      }\n    };\n    fetchPendingAccounts();\n  }, []);\n  const approveAccount = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5000/auth/admin/approve/${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setPendingAccounts(pendingAccounts.filter(account => account.id !== userId));\n      } else {\n        const errorData = await response.json();\n        setMessage(errorData.error || 'Failed to approve account.');\n      }\n    } catch (error) {\n      setMessage('An error occurred while approving. Please try again.');\n    }\n  };\n  const denyAccount = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5000/auth/admin/deny/${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setPendingAccounts(pendingAccounts.filter(account => account.id !== userId));\n      } else {\n        const errorData = await response.json();\n        setMessage(errorData.error || 'Failed to deny account.');\n      }\n    } catch (error) {\n      setMessage('An error occurred while denying. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Pending Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pending-accounts-list\",\n      children: pendingAccounts.map(account => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"pending-account-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"account-info\",\n          children: [account.username, \" - \", account.email, \" - \", account.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"approve-btn\",\n            onClick: () => approveAccount(account.id),\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deny-btn\",\n            onClick: () => denyAccount(account.id),\n            children: \"Deny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, account.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"tvoTL0WRU5oOtK9Y4q6Cw43s0ig=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AdminDashboard","_s","pendingAccounts","setPendingAccounts","message","setMessage","navigate","fetchPendingAccounts","response","fetch","headers","Authorization","localStorage","getItem","ok","data","json","errorData","error","approveAccount","userId","method","filter","account","id","denyAccount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","username","email","role","onClick","_c","$RefreshReg$"],"sources":["C:/TicketScheduler/it-help-desk/frontend/src/components/AdminDashboard.js"],"sourcesContent":["// src/components/AdminDashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n  const [pendingAccounts, setPendingAccounts] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPendingAccounts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/auth/admin/pending-accounts', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setPendingAccounts(data);\r\n        } else {\r\n          const errorData = await response.json();\r\n          setMessage(errorData.error || 'An error occurred. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        setMessage('An error occurred. Please try again.');\r\n      }\r\n    };\r\n\r\n    fetchPendingAccounts();\r\n  }, []);\r\n\r\n  const approveAccount = async (userId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/auth/admin/approve/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        setPendingAccounts(pendingAccounts.filter((account) => account.id !== userId));\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessage(errorData.error || 'Failed to approve account.');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while approving. Please try again.');\r\n    }\r\n  };\r\n\r\n  const denyAccount = async (userId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/auth/admin/deny/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        setPendingAccounts(pendingAccounts.filter((account) => account.id !== userId));\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessage(errorData.error || 'Failed to deny account.');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while denying. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h1 className=\"dashboard-title\">Admin Dashboard</h1>\r\n      {message && <p className=\"error-message\">{message}</p>}\r\n      <h2 className=\"section-title\">Pending Accounts</h2>\r\n      <ul className=\"pending-accounts-list\">\r\n        {pendingAccounts.map((account) => (\r\n          <li key={account.id} className=\"pending-account-item\">\r\n            <span className=\"account-info\">\r\n              {account.username} - {account.email} - {account.role}\r\n            </span>\r\n            <div className=\"action-buttons\">\r\n              <button className=\"approve-btn\" onClick={() => approveAccount(account.id)}>\r\n                Approve\r\n              </button>\r\n              <button className=\"deny-btn\" onClick={() => denyAccount(account.id)}>\r\n                Deny\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}