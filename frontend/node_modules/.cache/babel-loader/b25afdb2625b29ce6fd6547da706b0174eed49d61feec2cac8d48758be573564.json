{"ast":null,"code":"var _jsxFileName = \"C:\\\\TicketScheduler\\\\it-help-desk\\\\frontend\\\\src\\\\components\\\\ITHelperDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './ITHelperDashboard.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst ITHelperDashboard = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [newDuration, setNewDuration] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/auth/tickets/assigned', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Map tickets to calendar event format\n          const events = data.map(ticket => ({\n            id: ticket.id,\n            title: ticket.title,\n            start: new Date(ticket.scheduled_time),\n            end: new Date(new Date(ticket.scheduled_time).getTime() + ticket.duration * 60000)\n          }));\n          setTickets(events);\n        } else {\n          setMessage(data.error);\n        }\n      } catch (error) {\n        setMessage('Failed to fetch tickets. Please try again later.');\n      }\n    };\n    fetchTickets();\n  }, []);\n  const handleEventClick = event => {\n    navigate(`/ticket/${event.id}`);\n  };\n  const handleUpdateDuration = async () => {\n    if (!newDuration || isNaN(newDuration) || newDuration <= 0) {\n      setMessage('Please enter a valid duration.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/auth/tickets/update-time/${selectedTicket.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          duration: newDuration\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Ticket time updated successfully!');\n        setSelectedTicket(null);\n        setNewDuration('');\n        // Refresh the tickets\n        const updatedTickets = tickets.map(ticket => ticket.id === selectedTicket.id ? {\n          ...ticket,\n          duration: newDuration,\n          end: new Date(new Date(ticket.start).getTime() + newDuration * 60000)\n        } : ticket);\n        setTickets(updatedTickets);\n      } else {\n        setMessage(data.error);\n      }\n    } catch (error) {\n      setMessage('An error occurred while updating the ticket.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"it-helper-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IT Helper Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: tickets,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectEvent: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), selectedTicket && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ticket Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", selectedTicket.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", selectedTicket.duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter new duration\",\n        value: newDuration,\n        onChange: e => setNewDuration(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateDuration,\n        children: \"Update Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ITHelperDashboard, \"pKKgzmkx1Qka5cRRLU7GPX+LNf8=\", false, function () {\n  return [useNavigate];\n});\n_c = ITHelperDashboard;\nexport default ITHelperDashboard;\nvar _c;\n$RefreshReg$(_c, \"ITHelperDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","useNavigate","jsxDEV","_jsxDEV","localizer","ITHelperDashboard","_s","tickets","setTickets","selectedTicket","setSelectedTicket","newDuration","setNewDuration","message","setMessage","navigate","fetchTickets","response","fetch","method","headers","localStorage","getItem","data","json","ok","events","map","ticket","id","title","start","Date","scheduled_time","end","getTime","duration","error","handleEventClick","event","handleUpdateDuration","isNaN","body","JSON","stringify","updatedTickets","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","style","height","onSelectEvent","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/TicketScheduler/it-help-desk/frontend/src/components/ITHelperDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport './ITHelperDashboard.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst ITHelperDashboard = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [newDuration, setNewDuration] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchTickets = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/auth/tickets/assigned', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          // Map tickets to calendar event format\r\n          const events = data.map((ticket) => ({\r\n            id: ticket.id,\r\n            title: ticket.title,\r\n            start: new Date(ticket.scheduled_time),\r\n            end: new Date(new Date(ticket.scheduled_time).getTime() + ticket.duration * 60000),\r\n          }));\r\n          setTickets(events);\r\n        } else {\r\n          setMessage(data.error);\r\n        }\r\n      } catch (error) {\r\n        setMessage('Failed to fetch tickets. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchTickets();\r\n  }, []);\r\n\r\n  const handleEventClick = (event) => {\r\n    navigate(`/ticket/${event.id}`);\r\n  };\r\n\r\n  const handleUpdateDuration = async () => {\r\n    if (!newDuration || isNaN(newDuration) || newDuration <= 0) {\r\n      setMessage('Please enter a valid duration.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/auth/tickets/update-time/${selectedTicket.id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({ duration: newDuration }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage('Ticket time updated successfully!');\r\n        setSelectedTicket(null);\r\n        setNewDuration('');\r\n        // Refresh the tickets\r\n        const updatedTickets = tickets.map((ticket) =>\r\n          ticket.id === selectedTicket.id\r\n            ? {\r\n                ...ticket,\r\n                duration: newDuration,\r\n                end: new Date(new Date(ticket.start).getTime() + newDuration * 60000),\r\n              }\r\n            : ticket\r\n        );\r\n        setTickets(updatedTickets);\r\n      } else {\r\n        setMessage(data.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while updating the ticket.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"it-helper-dashboard\">\r\n      <h1>IT Helper Dashboard</h1>\r\n      {message && <p className=\"status-message\">{message}</p>}\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={tickets}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectEvent={handleEventClick}\r\n      />\r\n      {selectedTicket && (\r\n        <div className=\"ticket-details\">\r\n          <h2>Ticket Details</h2>\r\n          <p>Title: {selectedTicket.title}</p>\r\n          <p>Duration: {selectedTicket.duration} minutes</p>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter new duration\"\r\n            value={newDuration}\r\n            onChange={(e) => setNewDuration(e.target.value)}\r\n          />\r\n          <button onClick={handleUpdateDuration}>Update Duration</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITHelperDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}