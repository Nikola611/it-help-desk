{"ast":null,"code":"var _jsxFileName = \"C:\\\\TicketScheduler\\\\it-help-desk\\\\frontend\\\\src\\\\components\\\\ITHelperDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/ITHelperDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './ITHelperDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITHelperDashboard = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchTickets = async () => {\n      const response = await fetch('http://localhost:5000/auth/tickets/assigned', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setTickets(data);\n      } else {\n        setMessage(data.error);\n      }\n    };\n    fetchTickets();\n  }, []);\n  const handleTicketClick = ticket => {\n    setSelectedTicket(ticket);\n  };\n  const updateTicketTime = async newDuration => {\n    try {\n      const response = await fetch(`http://localhost:5000/auth/tickets/update-time/${selectedTicket.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          duration: newDuration\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Ticket time updated successfully!');\n        setSelectedTicket(null);\n        setTickets(prevTickets => prevTickets.map(ticket => ticket.id === selectedTicket.id ? {\n          ...ticket,\n          duration: newDuration\n        } : ticket));\n      } else {\n        setMessage(data.error);\n      }\n    } catch (error) {\n      setMessage('An error occurred while updating the ticket.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"it-helper-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IT Helper Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      tileContent: ({\n        date\n      }) => {\n        const ticketForDate = tickets.find(ticket => new Date(ticket.scheduled_time).toDateString() === date.toDateString());\n        return ticketForDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTicketClick(ticketForDate),\n          children: [\"Ticket: \", ticketForDate.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 34\n        }, this) : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), selectedTicket && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ticket Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", selectedTicket.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", selectedTicket.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", selectedTicket.duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter new duration\",\n        onChange: e => updateTicketTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ITHelperDashboard, \"zX1NZvmMt8icoQiSWbn/5n4sAZE=\");\n_c = ITHelperDashboard;\nexport default ITHelperDashboard;\nvar _c;\n$RefreshReg$(_c, \"ITHelperDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","ITHelperDashboard","_s","tickets","setTickets","selectedTicket","setSelectedTicket","message","setMessage","fetchTickets","response","fetch","method","headers","localStorage","getItem","data","json","ok","error","handleTicketClick","ticket","updateTicketTime","newDuration","id","body","JSON","stringify","duration","prevTickets","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tileContent","date","ticketForDate","find","Date","scheduled_time","toDateString","onClick","title","description","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/TicketScheduler/it-help-desk/frontend/src/components/ITHelperDashboard.js"],"sourcesContent":["// src/components/ITHelperDashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './ITHelperDashboard.css';\r\n\r\nconst ITHelperDashboard = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTickets = async () => {\r\n      const response = await fetch('http://localhost:5000/auth/tickets/assigned', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setTickets(data);\r\n      } else {\r\n        setMessage(data.error);\r\n      }\r\n    };\r\n\r\n    fetchTickets();\r\n  }, []);\r\n\r\n  const handleTicketClick = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n  };\r\n\r\n  const updateTicketTime = async (newDuration) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/auth/tickets/update-time/${selectedTicket.id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({ duration: newDuration }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage('Ticket time updated successfully!');\r\n        setSelectedTicket(null);\r\n        setTickets((prevTickets) =>\r\n          prevTickets.map((ticket) =>\r\n            ticket.id === selectedTicket.id ? { ...ticket, duration: newDuration } : ticket\r\n          )\r\n        );\r\n      } else {\r\n        setMessage(data.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while updating the ticket.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"it-helper-dashboard\">\r\n      <h1>IT Helper Dashboard</h1>\r\n      {message && <p className=\"status-message\">{message}</p>}\r\n      <Calendar\r\n        tileContent={({ date }) => {\r\n          const ticketForDate = tickets.find(\r\n            (ticket) =>\r\n              new Date(ticket.scheduled_time).toDateString() === date.toDateString()\r\n          );\r\n          return ticketForDate ? <button onClick={() => handleTicketClick(ticketForDate)}>Ticket: {ticketForDate.title}</button> : null;\r\n        }}\r\n      />\r\n      {selectedTicket && (\r\n        <div className=\"ticket-details\">\r\n          <h2>Ticket Details</h2>\r\n          <p>Title: {selectedTicket.title}</p>\r\n          <p>Description: {selectedTicket.description}</p>\r\n          <p>Duration: {selectedTicket.duration} minutes</p>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter new duration\"\r\n            onChange={(e) => updateTicketTime(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITHelperDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}