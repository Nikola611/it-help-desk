{"ast":null,"code":"var _jsxFileName = \"C:\\\\TicketScheduler\\\\it-help-desk\\\\frontend\\\\src\\\\components\\\\TicketDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport BackButton from './BackButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\nconst TicketDetail = () => {\n  _s();\n  const {\n    ticketId\n  } = useParams();\n  const [ticket, setTicket] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [role, setRole] = useState('');\n  useEffect(() => {\n    socket = io('http://localhost:5000', {\n      transports: ['websocket', 'polling']\n    });\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      socket.emit('join_room', {\n        ticket_id: ticketId\n      });\n    });\n    socket.on('receive_message', message => {\n      setChatMessages(prev => [...prev, message]);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/auth/tickets/${ticketId}/messages`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        setChatMessages(data);\n      } catch (error) {\n        console.error('Failed to fetch messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [ticketId]);\n  useEffect(() => {\n    const fetchTicketDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/auth/tickets/${ticketId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setTicket(data.ticket);\n          setChatMessages(data.messages);\n          setRole(data.role);\n        } else {\n          console.error('Error fetching ticket details:', data.error);\n        }\n      } catch (error) {\n        console.error('Error fetching ticket details:', error);\n      }\n    };\n    fetchTicketDetails();\n  }, [ticketId]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    try {\n      const messageData = {\n        message: newMessage,\n        ticket_id: ticketId,\n        sender: role,\n        text: newMessage\n      };\n      socket.emit('send_message', messageData);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-detail\",\n    children: ticket && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ticket: \", ticket.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", ticket.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Duration: \", ticket.duration, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${msg.sender === role ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), \" \", msg.text]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketDetail, \"bStc5pS02K531jIokfIe9BghmDA=\", false, function () {\n  return [useParams];\n});\n_c = TicketDetail;\nexport default TicketDetail;\nvar _c;\n$RefreshReg$(_c, \"TicketDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","BackButton","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","TicketDetail","_s","ticketId","ticket","setTicket","chatMessages","setChatMessages","newMessage","setNewMessage","role","setRole","transports","on","console","log","emit","ticket_id","message","prev","disconnect","fetchMessages","response","fetch","method","headers","localStorage","getItem","ok","Error","data","json","error","fetchTicketDetails","messages","handleSendMessage","trim","messageData","sender","text","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","duration","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/TicketScheduler/it-help-desk/frontend/src/components/TicketDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport BackButton from './BackButton';\r\n\r\nlet socket;\r\n\r\nconst TicketDetail = () => {\r\n  const { ticketId } = useParams();\r\n  const [ticket, setTicket] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    socket = io('http://localhost:5000', { transports: ['websocket', 'polling'] });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      socket.emit('join_room', { ticket_id: ticketId });\r\n    });\r\n\r\n    socket.on('receive_message', (message) => {\r\n      setChatMessages((prev) => [...prev, message]);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [ticketId]);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/auth/tickets/${ticketId}/messages`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch messages');\r\n        }\r\n        const data = await response.json();\r\n        setChatMessages(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [ticketId]);\r\n\r\n  useEffect(() => {\r\n    const fetchTicketDetails = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/auth/tickets/${ticketId}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setTicket(data.ticket);\r\n          setChatMessages(data.messages);\r\n          setRole(data.role);\r\n        } else {\r\n          console.error('Error fetching ticket details:', data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching ticket details:', error);\r\n      }\r\n    };\r\n\r\n    fetchTicketDetails();\r\n  }, [ticketId]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim()) return;\r\n    try {\r\n      const messageData = {\r\n        message: newMessage,\r\n        ticket_id: ticketId,\r\n        sender: role,\r\n        text: newMessage,\r\n      };\r\n      socket.emit('send_message', messageData);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ticket-detail\">\r\n      {ticket && (\r\n        <>\r\n          <h1>Ticket: {ticket.title}</h1>\r\n          <p>Description: {ticket.description}</p>\r\n          <p>Estimated Duration: {ticket.duration} minutes</p>\r\n          <div className=\"chat-section\">\r\n            <h2>Chat</h2>\r\n            <div className=\"chat-messages\">\r\n              {chatMessages.map((msg, index) => (\r\n                <div key={index} className={`chat-message ${msg.sender === role ? 'sent' : 'received'}`}>\r\n                  <strong>{msg.sender}:</strong> {msg.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type your message here...\"\r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}